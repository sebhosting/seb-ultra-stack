# .github/workflows/release.yml
name: 🚀 Release & Deploy

on:
  push:
    branches: [main]
    tags: ['v*']
  pull_request:
    branches: [main]

jobs:
  test:
    name: 🧪 Test Stack
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
        
      - name: 📦 Install Dependencies
        run: |
          if [ -f package.json ]; then
            npm ci
          else
            echo "No package.json found, skipping npm install"
          fi
        
      - name: 🧹 Lint Scripts
        run: |
          echo "🔍 Checking install script..."
          if [ -f install.sh ]; then
            bash -n install.sh
            echo "✅ install.sh syntax is valid"
          else
            echo "⚠️ install.sh not found"
          fi
        
      - name: 🧪 Run Tests
        run: |
          echo "🚀 Running SEB Ultra Stack tests..."
          # Add your test commands here
          echo "✅ All tests passed!"

  build:
    name: 🏗️ Build Documentation
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
      
      - name: 📖 Setup Pages
        uses: actions/configure-pages@v4
      
      - name: 🏗️ Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./docs
          destination: ./_site
        
      - name: 📤 Upload Pages Artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: ./_site
      
      - name: 📦 Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: seb-ultra-stack-build
          path: |
            install.sh
            docs/
            README.md
          retention-days: 30

  release:
    name: 🎉 Create Release
    runs-on: ubuntu-latest
    needs: [test, build]
    if: startsWith(github.ref, 'refs/tags/v')
    
    permissions:
      contents: write
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: 📝 Generate Changelog
        id: changelog
        run: |
          echo "## 🔥 What's New in SEB Ultra Stack" > CHANGELOG.md
          echo "" >> CHANGELOG.md
          
          # Get commits since last tag
          LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -n "$LAST_TAG" ]; then
            git log --pretty=format:"- %s" $LAST_TAG..HEAD >> CHANGELOG.md
          else
            git log --pretty=format:"- %s" --max-count=10 >> CHANGELOG.md
          fi
          
          echo "" >> CHANGELOG.md
          echo "## 🚀 Quick Install" >> CHANGELOG.md
          echo '```bash' >> CHANGELOG.md
          echo 'curl -sSL https://sebhosting.com/install.sh | bash' >> CHANGELOG.md
          echo '```' >> CHANGELOG.md

      - name: 🎉 Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: "SEB Ultra Stack ${{ github.ref_name }} 💀"
          body_path: CHANGELOG.md
          draft: false
          prerelease: false
        
      - name: 📦 Upload Install Script
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./install.sh
          asset_name: install.sh
          asset_content_type: application/x-shellscript

  deploy-pages:
    name: 🌐 Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    
    permissions:
      pages: write
      id-token: write
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    steps:
      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  notify:
    name: 📢 Notify Success
    runs-on: ubuntu-latest
    needs: [test, build, deploy-pages]
    if: always() && (needs.test.result == 'success' && needs.build.result == 'success')
    permissions: {}
    steps:
      - name: 🎯 Success Notification
        run: |
          echo "🔥 SEB Ultra Stack deployment successful!"
          echo "📖 Docs: https://sebhosting.github.io/seb-ultra-stack/"
          echo "💀 Ready to be bad to the bone!"
